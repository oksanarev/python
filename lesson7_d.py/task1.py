# 1 Задание.
#1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса
# (метод __init__()), который должен принимать данные (список списков) для формирования
# матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц вы найдете в методичке.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix
# (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой
# матрицы складываем с первым элементом первой строки второй матрицы и т.д.

class Matrix:
    def __init__(self, list_1, list_2):
        self.matrix = [list_1, list_2]
        self.list_1 = list_1
        self.list_2 = list_2

    def __str__(self):

        return str("\n".join(["\t".join([str(j) for j in i]) for i in self.matrix]))

    def __add__(self):

       matr = [[0, 0, 0],
               [0, 0, 0],
               [0, 0, 0]]

       for i in range(len(self.list_1)):

        for j in range(len(self.list_2[i])):
            matr[i][j] = self.list_1[i][j] + self.list_2[i][j]

       return str('\n'.join(['\t'.join(str(j) for j in [i]) for i in matr]))



my_matrix = Matrix([
                    [4, 34, 1],
                    [7, 3, 12],
                    [111, 5, 3]],
                   [[45, 8, 2],
                    [6, 7, 93],
                    [34, 9, 77]])

print(my_matrix)

print(f'Новая матрица:\n', my_matrix.__add__())